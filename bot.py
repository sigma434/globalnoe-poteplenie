import telebot
import os
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot.handler_backends import ContinueHandling
from telebot import types
from commands import parsing
bot = telebot.TeleBot("YOUR TOKEN!!!")

def create_keyboard():
    keyboard = InlineKeyboardMarkup(row_width=2)
    parse_button = InlineKeyboardButton("–ø–∞—Ä—Å–∏–Ω–≥", callback_data="pars")
    info_button = InlineKeyboardButton("–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data="info")
    keyboard.add(parse_button, info_button)
    return keyboard


bot.set_my_commands(
    commands=[
        telebot.types.BotCommand("info", "sending you a text about ecology"),
        telebot.types.BotCommand("start","greets you"),
        telebot.types.BotCommand("pars","–ø–∞—Ä—Å–∏—Ç —Å–∞–π—Ç —Å –∞–∫—Ç—É–∞–ª—å–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –ø—Ä–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ –∏ —Å–∫–∏–¥—ã–≤–∞–µ—Ç —Ç–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        ])

#–ö–∞—é—Å—å –ø—Ä–∏—à–ª–æ—Å—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–µ–π—Ä–æ–Ω–∫–æ–π, —Ç–∫ –ø–∞—Ä—Å–∏–Ω–≥ –Ω–µ —Ä–æ–±–∏–ª
@bot.message_handler(commands=["pars"])
def pars(message):
    try:
        infos=parsing()
        response = "üì∞ **–°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –∫–ª–∏–º–∞—Ç–µ:**\n\n"
        for i, (title, link) in enumerate(zip(infos['title'], infos['link']), 1):
            if i > 5:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 5 –Ω–æ–≤–æ—Å—Ç—è–º–∏
                break
            response += f"{i}. {title}\nüîó {link}\n\n"
        
        bot.send_message(message.chat.id, response)
    except:
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏")



@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å–≤—è–∑–∞–Ω —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏—è.",reply_markup=create_keyboard())


@bot.message_handler(commands=["info"])
def text(message):
    text=open("text.txt" ,"r",encoding="utf-8")
    f=text.read()
    bot.send_message(message.chat.id , f )
    text.close()

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == "pars":

        try:
            infos = parsing()
            response = "üì∞ **–°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –∫–ª–∏–º–∞—Ç–µ:**\n\n"
            for i, (title, link) in enumerate(zip(infos['title'], infos['link']), 1):
                if i > 5:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 5 –Ω–æ–≤–æ—Å—Ç—è–º–∏
                    break
                response += f"{i}. {title}\nüîó {link}\n\n"
            
            bot.send_message(call.message.chat.id, response)
        except:
            bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏")
    
    elif call.data == "info":
        try:
            text = open("text.txt", "r", encoding="utf-8")
            f = text.read()
            bot.send_message(call.message.chat.id, f)
            text.close()
        except:
            bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —à–æ–∫–æ–ª–∞–¥–∫–∏")


bot.infinity_polling()
 

bot.infinity_polling()
